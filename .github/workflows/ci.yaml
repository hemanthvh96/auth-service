name: CI
on:
    pull_request:
        branches:
            - master

    push:
        branches:
            - master

jobs:
    build-and-test:
        name: Build and Test Project
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Install dependencies
              run: npm ci
            - name: Run eslint
              run: npm run lint
            - name: Test and coverage
              run: npm run test
              env:
                  DB_HOST: ${{secrets.TEST_DB_HOST}}
                  DB_PORT: ${{secrets.TEST_DB_PORT}}
                  DB_USERNAME: ${{secrets.TEST_DB_USERNAME}}
                  DB_PASSWORD: ${{secrets.TEST_DB_PASSWORD}}
                  DB_DATABASE: ${{secrets.TEST_DB_NAME}}
                  REFRESH_TOKEN_SECRET: ${{secrets.TEST_REFRESH_TOKEN_SECRET}}
                  JWKS_URI: ${{secrets.TEST_JWKS_URI}}
                  PRIVATE_KEY: ${{secrets.TEST_PRIVATE_KEY}}
            - name: Build TS
              run: npm run build
            - name: Sonar Cloud Scan
              uses: sonarsource/sonarcloud-github-action@master
              env:
                  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
                  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    build-and-push-docker:
        name: Build and Push Docker Image
        needs: build-and-test
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: hemanthvhs/auth-service
            IMAGE_TAG: build-${{github.run_number}}
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{secrets.DOCKERHUB_USERNAME}}
                  password: ${{secrets.DOCKERHUB_PASSWORD}}
            - name: Build Docker Image
              run: docker build -t ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}} -f docker/prod/Dockerfile .
            - name: Push Docker Image
              run: docker push ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
